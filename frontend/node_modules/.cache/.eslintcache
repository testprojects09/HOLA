[{"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\index.jsx":"1","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\App.jsx":"2","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\routes\\AppRouter.jsx":"3","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\AnimalsPage.jsx":"4","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\layouts\\Layout.jsx":"5","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\NotFoundPage.jsx":"6","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\components\\Navigation.jsx":"7","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\HomePage\\HomePage.jsx":"8","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\Login\\LoginPage.jsx":"9","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\ProductsPage\\ProductsPage.jsx":"10","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\auth\\AuthProvider.jsx":"11","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\auth\\useAuth.jsx":"12","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\api\\api.jsx":"13","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\Citas\\AppointmentPage.jsx":"14","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\Admin\\AdminPage.jsx":"15","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\routes\\PrivateRoute.jsx":"16","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\components\\FormUtilities.jsx":"17","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\Navi.jsx":"18","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\layouts\\UserLayout.jsx":"19","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\AccountPage\\CitaAccountPage.jsx":"20","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\AccountPage\\WelcomeAccountPage.jsx":"21","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\components\\AccountUtilities.jsx":"22","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\routes\\AccountRouter.jsx":"23","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\AccountPage\\Admin\\AdminAccountPage.jsx":"24","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\AccountPage\\User\\UserNavLinks.jsx":"25","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\components\\BaseAccountPage.jsx":"26","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\AccountPage\\Admin\\Registros\\Productos\\Products.jsx":"27","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\AccountPage\\Admin\\Gestion\\Productos\\GestionsProducts.jsx":"28","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\Register\\RegisterPage.jsx":"29","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\AccountPage\\Admin\\Gestion\\Usuarios\\GestionUsuarios.jsx":"30","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\AccountPage\\Admin\\Gestion\\Usuarios\\UsersUtilities.jsx":"31","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\AccountPage\\Admin\\Registros\\Usuarios\\RegisterUser.jsx":"32","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\AccountPage\\Admin\\Gestion\\Citas\\GestionCitas.jsx":"33","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\AccountPage\\Admin\\Gestion\\Citas\\CitasUtilities.jsx":"34","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\AccountPage\\Admin\\Gestion\\Citas\\CitasAprobadas\\GestionCitasAprobadas.jsx":"35","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\AccountPage\\Admin\\Registros\\Citas\\RegisterCita.jsx":"36","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\CartPage\\CartPage.jsx":"37","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\components\\Validations.jsx":"38","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\AccountPage\\User\\Pedidos\\Pedidos.jsx":"39","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\AccountPage\\Admin\\Gestion\\Pedidos\\GestionarPedidos.jsx":"40","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\AccountPage\\Admin\\Gestion\\Pedidos\\GestionPedidosUtilitites.jsx":"41","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\AccountPage\\User\\Account\\UserAccount.jsx":"42","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\keys\\keys.js":"43"},{"size":243,"mtime":1622744101385,"results":"44","hashOfConfig":"45"},{"size":251,"mtime":1622175272669,"results":"46","hashOfConfig":"45"},{"size":1441,"mtime":1625077952877,"results":"47","hashOfConfig":"45"},{"size":163,"mtime":1623192215180,"results":"48","hashOfConfig":"45"},{"size":899,"mtime":1624893826978,"results":"49","hashOfConfig":"45"},{"size":168,"mtime":1622063669830,"results":"50","hashOfConfig":"45"},{"size":3645,"mtime":1625596580173,"results":"51","hashOfConfig":"45"},{"size":15642,"mtime":1625598596693,"results":"52","hashOfConfig":"45"},{"size":3402,"mtime":1625503135645,"results":"53","hashOfConfig":"45"},{"size":3054,"mtime":1625597964818,"results":"54","hashOfConfig":"45"},{"size":1079,"mtime":1625098688137,"results":"55","hashOfConfig":"45"},{"size":177,"mtime":1622175239778,"results":"56","hashOfConfig":"45"},{"size":7736,"mtime":1625097066288,"results":"57","hashOfConfig":"45"},{"size":7470,"mtime":1625102568930,"results":"58","hashOfConfig":"45"},{"size":118,"mtime":1622257783606,"results":"59","hashOfConfig":"45"},{"size":304,"mtime":1622729999844,"results":"60","hashOfConfig":"45"},{"size":11909,"mtime":1625102394777,"results":"61","hashOfConfig":"45"},{"size":1403,"mtime":1622588790884,"results":"62","hashOfConfig":"45"},{"size":241,"mtime":1622658023625,"results":"63","hashOfConfig":"45"},{"size":5517,"mtime":1625094365949,"results":"64","hashOfConfig":"45"},{"size":939,"mtime":1625023174503,"results":"65","hashOfConfig":"45"},{"size":911,"mtime":1625060480432,"results":"66","hashOfConfig":"45"},{"size":2320,"mtime":1625094979646,"results":"67","hashOfConfig":"45"},{"size":1861,"mtime":1625024615215,"results":"68","hashOfConfig":"45"},{"size":693,"mtime":1625024927727,"results":"69","hashOfConfig":"45"},{"size":2106,"mtime":1623779287573,"results":"70","hashOfConfig":"45"},{"size":6587,"mtime":1625161998267,"results":"71","hashOfConfig":"45"},{"size":3993,"mtime":1625023021356,"results":"72","hashOfConfig":"45"},{"size":6449,"mtime":1625598125310,"results":"73","hashOfConfig":"45"},{"size":3902,"mtime":1625022533968,"results":"74","hashOfConfig":"45"},{"size":4967,"mtime":1624660706622,"results":"75","hashOfConfig":"45"},{"size":7217,"mtime":1625161095358,"results":"76","hashOfConfig":"45"},{"size":4543,"mtime":1625022701938,"results":"77","hashOfConfig":"45"},{"size":6869,"mtime":1624485026275,"results":"78","hashOfConfig":"45"},{"size":3485,"mtime":1625022819135,"results":"79","hashOfConfig":"45"},{"size":7132,"mtime":1625161610561,"results":"80","hashOfConfig":"45"},{"size":12814,"mtime":1625598590393,"results":"81","hashOfConfig":"45"},{"size":289,"mtime":1624766365064,"results":"82","hashOfConfig":"45"},{"size":5466,"mtime":1625067523467,"results":"83","hashOfConfig":"45"},{"size":3316,"mtime":1625598706142,"results":"84","hashOfConfig":"45"},{"size":3282,"mtime":1625067517410,"results":"85","hashOfConfig":"45"},{"size":7060,"mtime":1625099866915,"results":"86","hashOfConfig":"45"},{"size":90,"mtime":1625503065825,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"1fmw1bb",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"90"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"90"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\index.jsx",[],["179","180"],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\App.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\routes\\AppRouter.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\AnimalsPage.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\layouts\\Layout.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\NotFoundPage.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\components\\Navigation.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\HomePage\\HomePage.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\Login\\LoginPage.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\ProductsPage\\ProductsPage.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\auth\\AuthProvider.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\auth\\useAuth.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\api\\api.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\Citas\\AppointmentPage.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\Admin\\AdminPage.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\routes\\PrivateRoute.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\components\\FormUtilities.jsx",["181","182"],"import { useEffect, useRef, useState } from \"react\";\r\nimport { Alert, Button, Form, Modal } from \"react-bootstrap\";\r\nimport { APICitas, APIProducts, IMG_URL } from \"../api/api\";\r\n\r\nconst Alerts = (message, variant) => {\r\n  return <Alert variant={variant}>{message}</Alert>;\r\n};\r\n\r\nconst CustomModal = ({\r\n  show,\r\n  handleClose,\r\n  appointments,\r\n  pickAppointment,\r\n  setAlert,\r\n  setAlertMsg,\r\n  setAlertVariant,\r\n}) => {\r\n  const [dates, setDates] = useState();\r\n  const [hasLoaded, setHasLoaded] = useState();\r\n  const isMountedRef = useRef(true);\r\n\r\n  const [formData, setFormData] = useState({\r\n    fecha: pickAppointment.appointment_date.split(\" \")[0],\r\n    hora: pickAppointment.appointment_date\r\n      .split(\" \")\r\n      .slice(1)\r\n      .toString()\r\n      .replace(\",\", \" \"),\r\n    desc: pickAppointment.descripcion,\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleAlert = (msg, variant) => {\r\n    setAlert(true);\r\n    setAlertMsg(msg);\r\n    setAlertVariant(variant);\r\n    setTimeout(() => {\r\n      setAlert(false);\r\n      setAlertMsg(\"\");\r\n      setAlertVariant(\"\");\r\n    }, 3000);\r\n    handleClose();\r\n  };\r\n\r\n  const checkResponse = (res) => {\r\n    console.log(res);\r\n    if (res[1].status === 400) {\r\n      handleAlert(res[0][\"message\"], \"danger\");\r\n    } else {\r\n      handleAlert(\"Cita modificada correctamente.\", \"success\");\r\n    }\r\n  };\r\n\r\n  const updateAppointment = async () => {\r\n    const res = await APICitas.updateCita({\r\n      fecha: formData.fecha,\r\n      hora: formData.hora,\r\n      descripcion: formData.desc,\r\n      appointmentId: pickAppointment.appointment_id,\r\n    });\r\n    checkResponse(res);\r\n  };\r\n\r\n  const getCitas = async () => {\r\n    const res = await APICitas.getDates();\r\n    if (isMountedRef.current) {\r\n      setDates(res);\r\n      setHasLoaded(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCitas();\r\n    return () => {\r\n      // setDates({});\r\n      // setHasLoaded({});\r\n      isMountedRef.current = false;\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Modal show={show} onHide={handleClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Editar cita</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form>\r\n          <Form.Group className=\"mb-3\" controlId=\"formFecha\">\r\n            <Form.Label>Fecha</Form.Label>\r\n            <Form.Control\r\n              value={formData.fecha}\r\n              onChange={handleChange}\r\n              name=\"fecha\"\r\n              type=\"date\"\r\n              placeholder=\"Fecha\"\r\n            />\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\r\n            <Form.Label>Hora de la Cita</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              name=\"hora\"\r\n              value={formData.hora}\r\n              onChange={handleChange}\r\n            >\r\n              <option disabled value={-1}>\r\n                {pickAppointment.appointment_date\r\n                  .split(\" \")\r\n                  .slice(1)\r\n                  .toString()\r\n                  .replace(\",\", \" \")}\r\n              </option>\r\n              <option>10:00 am</option>\r\n              <option>11:00 am</option>\r\n              <option>12:00 pm</option>\r\n              <option>13:00 pm</option>\r\n              <option>14:00 pm</option>\r\n              <option>15:00 pm</option>\r\n              <option>16:00 pm</option>\r\n              <option>17:00 pm</option>\r\n              <option>18:00 pm</option>\r\n            </Form.Control>\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"formDesc\">\r\n            <Form.Label>Desccripción</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              placeholder=\"Descripción\"\r\n              name=\"desc\"\r\n              value={formData.desc}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Group>\r\n        </Form>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={handleClose}>\r\n          Cancelar\r\n        </Button>\r\n        <Button variant=\"primary\" onClick={updateAppointment}>\r\n          Editar\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst ModalDelete = ({\r\n  show,\r\n  handleClose,\r\n  pickAppointment,\r\n  setAlert,\r\n  setAlertMsg,\r\n  setAlertVariant,\r\n}) => {\r\n  const handleAlert = (msg, variant) => {\r\n    setAlert(true);\r\n    setAlertMsg(msg);\r\n    setAlertVariant(variant);\r\n    setTimeout(() => {\r\n      setAlert(false);\r\n      setAlertMsg(\"\");\r\n      setAlertVariant(\"\");\r\n    }, 3000);\r\n    handleClose();\r\n  };\r\n\r\n  const checkResponse = (res) => {\r\n    console.log(res);\r\n    if (res[1].status === 400) {\r\n      handleAlert(res[0][\"message\"], \"danger\");\r\n    } else {\r\n      handleAlert(\"Cita eliminada correctamente.\", \"success\");\r\n    }\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    const res = await APICitas.deleteCita({\r\n      appointment: pickAppointment,\r\n    });\r\n    checkResponse(res);\r\n  };\r\n\r\n  return (\r\n    <Modal show={show} onHide={handleClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Eliminar Cita</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>{`¿Está seguro que desea eliminar la cita con fecha: ${\r\n        pickAppointment.appointment_date.split(\" \")[0]\r\n      } y hora: ${pickAppointment.appointment_date\r\n        .split(\" \")\r\n        .slice(1)\r\n        .toString()\r\n        .replace(\",\", \" \")}?`}</Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={handleClose}>\r\n          Cancelar\r\n        </Button>\r\n        <Button variant=\"primary\" onClick={handleDelete}>\r\n          Eliminar\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst ModalUpdate = ({\r\n  show,\r\n  handleClose,\r\n  selectedProduct,\r\n  setAlert,\r\n  setAlertMsg,\r\n  setAlertVariant,\r\n}) => {\r\n  const [formProduct, setFormProduct] = useState({\r\n    name: selectedProduct.name,\r\n    cantidad: selectedProduct.cantidad,\r\n    price: selectedProduct.price,\r\n    descripcion: selectedProduct.descripcion,\r\n    marca: selectedProduct.marca,\r\n  });\r\n\r\n  const [fileName, setFileName] = useState(selectedProduct.img);\r\n  const [selectedFile, setSelectedFile] = useState(\r\n    `${IMG_URL}${selectedProduct.img}`\r\n  );\r\n\r\n  const handleChange = (e) => {\r\n    setFormProduct({\r\n      ...formProduct,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    const [file] = e.target.files;\r\n    setFileName(file.name);\r\n\r\n    const reader = new FileReader();\r\n    reader.onloadend = () => {\r\n      setSelectedFile(reader.result);\r\n    };\r\n    reader.readAsDataURL(file);\r\n  };\r\n\r\n  const handleAlert = (msg, variant) => {\r\n    setAlert(true);\r\n    setAlertMsg(msg);\r\n    setAlertVariant(variant);\r\n    setTimeout(() => {\r\n      setAlert(false);\r\n      setAlertMsg(\"\");\r\n      setAlertVariant(\"\");\r\n    }, 3000);\r\n    handleClose();\r\n  };\r\n\r\n  const checkResponse = (res) => {\r\n    if (res[1].status === 400) {\r\n      handleAlert(res[0][\"message\"], \"danger\");\r\n    } else {\r\n      handleAlert(\"Cita modificada correctamente.\", \"success\");\r\n    }\r\n  };\r\n\r\n  const updateProduct = async () => {\r\n    const res = await APIProducts.updateProduct({\r\n      id: selectedProduct.product_id,\r\n      name: formProduct.name,\r\n      cantidad: formProduct.cantidad,\r\n      price: formProduct.price,\r\n      descripcion: formProduct.descripcion,\r\n      marca: formProduct.marca,\r\n      imgName: fileName,\r\n      img: selectedFile,\r\n    });\r\n    checkResponse(res);\r\n  };\r\n\r\n  return (\r\n    <Modal show={show} onHide={handleClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Editar Producto</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form>\r\n          <Form.Group className=\"mb-3\" controlId=\"formNombre\">\r\n            <Form.Label>Nombre del Producto</Form.Label>\r\n            <Form.Control\r\n              value={formProduct.name}\r\n              onChange={handleChange}\r\n              name=\"name\"\r\n              type=\"text\"\r\n              placeholder=\"Nombre del Producto\"\r\n            />\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"formMarca\">\r\n            <Form.Label>Marca del Producto</Form.Label>\r\n            <Form.Control\r\n              value={formProduct.marca}\r\n              onChange={handleChange}\r\n              name=\"marca\"\r\n              type=\"text\"\r\n              placeholder=\"Marca del Producto\"\r\n            />\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"formPrice\">\r\n            <Form.Label>Precio del Producto</Form.Label>\r\n            <Form.Control\r\n              value={formProduct.price}\r\n              onChange={handleChange}\r\n              name=\"price\"\r\n              type=\"text\"\r\n              placeholder=\"Precio del Producto\"\r\n            />\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"formCantidad\">\r\n            <Form.Label>Stock del Producto</Form.Label>\r\n            <Form.Control\r\n              value={formProduct.cantidad}\r\n              onChange={handleChange}\r\n              name=\"cantidad\"\r\n              type=\"text\"\r\n              placeholder=\"Stock del Producto\"\r\n            />\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"formDesc\">\r\n            <Form.Label>Descripción</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              placeholder=\"Descripción\"\r\n              name=\"descripcion\"\r\n              value={formProduct.descripcion}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"formImagen\">\r\n            <Form.Label>Imágen del Producto</Form.Label>\r\n            <Form.File\r\n              custom\r\n              label={fileName}\r\n              data-browse=\"Seleccionar\"\r\n              onChange={handleFileChange}\r\n              accept=\"image/*\"\r\n            ></Form.File>\r\n            <img\r\n              className=\"img-fluid mt-2\"\r\n              src={`${selectedFile}`}\r\n              alt=\"product-view\"\r\n            ></img>\r\n          </Form.Group>\r\n        </Form>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={handleClose}>\r\n          Cancelar\r\n        </Button>\r\n        <Button variant=\"primary\" onClick={updateProduct}>\r\n          Editar\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst ModalDeleteProduct = ({\r\n  show,\r\n  handleClose,\r\n  selectedProduct,\r\n  setAlert,\r\n  setAlertMsg,\r\n  setAlertVariant,\r\n}) => {\r\n  const handleAlert = (msg, variant) => {\r\n    setAlert(true);\r\n    setAlertMsg(msg);\r\n    setAlertVariant(variant);\r\n    setTimeout(() => {\r\n      setAlert(false);\r\n      setAlertMsg(\"\");\r\n      setAlertVariant(\"\");\r\n    }, 3000);\r\n    handleClose();\r\n  };\r\n\r\n  const checkResponse = (res) => {\r\n    console.log(res);\r\n    if (res[1].status === 400) {\r\n      handleAlert(res[0][\"message\"], \"danger\");\r\n    } else {\r\n      handleAlert(\"Producto eliminado correctamente.\", \"success\");\r\n    }\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    const res = await APIProducts.deleteProduct({\r\n      product: selectedProduct,\r\n    });\r\n    checkResponse(res);\r\n  };\r\n\r\n  return (\r\n    <Modal show={show} onHide={handleClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Eliminar Producto</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>{`¿Está seguro que desea eliminar el producto: ${selectedProduct.name}?`}</Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={handleClose}>\r\n          Cancelar\r\n        </Button>\r\n        <Button variant=\"primary\" onClick={handleDelete}>\r\n          Eliminar\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport { Alerts, CustomModal, ModalDelete, ModalUpdate, ModalDeleteProduct };\r\n","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\Navi.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\layouts\\UserLayout.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\AccountPage\\CitaAccountPage.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\AccountPage\\WelcomeAccountPage.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\components\\AccountUtilities.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\routes\\AccountRouter.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\AccountPage\\Admin\\AdminAccountPage.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\AccountPage\\User\\UserNavLinks.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\components\\BaseAccountPage.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\AccountPage\\Admin\\Registros\\Productos\\Products.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\AccountPage\\Admin\\Gestion\\Productos\\GestionsProducts.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\Register\\RegisterPage.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\AccountPage\\Admin\\Gestion\\Usuarios\\GestionUsuarios.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\AccountPage\\Admin\\Gestion\\Usuarios\\UsersUtilities.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\AccountPage\\Admin\\Registros\\Usuarios\\RegisterUser.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\AccountPage\\Admin\\Gestion\\Citas\\GestionCitas.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\AccountPage\\Admin\\Gestion\\Citas\\CitasUtilities.jsx",["183","184","185","186"],"import { APICitas, APIUsers } from \"../../../../../api/api\";\r\nimport { Alert, Button, Form, Modal } from \"react-bootstrap\";\r\nimport { useState } from \"react\";\r\n\r\nconst ModalApprovedCita = ({\r\n  show,\r\n  handleClose,\r\n  selectedCita,\r\n  setAlert,\r\n  setAlertMsg,\r\n  setAlertVariant,\r\n  message,\r\n}) => {\r\n  const handleAlert = (msg, variant) => {\r\n    setAlert(true);\r\n    setAlertMsg(msg);\r\n    setAlertVariant(variant);\r\n    setTimeout(() => {\r\n      setAlert(false);\r\n      setAlertMsg(\"\");\r\n      setAlertVariant(\"\");\r\n    }, 3000);\r\n    handleClose();\r\n  };\r\n\r\n  const checkResponse = (res) => {\r\n    console.log(res);\r\n    if (res[1].status === 400) {\r\n      handleAlert(res[0][\"message\"], \"danger\");\r\n    } else {\r\n      handleAlert(\"Notificación al usuario hecha y cita aprovada.\", \"success\");\r\n    }\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    const res = await APICitas.ApproveCita({\r\n      cita: selectedCita,\r\n    });\r\n    checkResponse(res);\r\n  };\r\n\r\n  return (\r\n    <Modal show={show} onHide={handleClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Aprovar Cita</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>{`¿Está seguro que desa aprovar y notificar al cliente de la cita con fecha : ${selectedCita.appointment_date}?`}</Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={handleClose}>\r\n          Cancelar\r\n        </Button>\r\n        <Button variant=\"primary\" onClick={handleDelete}>\r\n          Aprovar\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst ModalRemoveCita = ({\r\n  show,\r\n  handleClose,\r\n  selectedCita,\r\n  setAlert,\r\n  setAlertMsg,\r\n  setAlertVariant,\r\n  message,\r\n  messageAlert,\r\n}) => {\r\n  const handleAlert = (msg, variant) => {\r\n    setAlert(true);\r\n    setAlertMsg(msg);\r\n    setAlertVariant(variant);\r\n    setTimeout(() => {\r\n      setAlert(false);\r\n      setAlertMsg(\"\");\r\n      setAlertVariant(\"\");\r\n    }, 3000);\r\n    handleClose();\r\n  };\r\n\r\n  const checkResponse = (res) => {\r\n    if (res[1].status === 400) {\r\n      handleAlert(res[0][\"message\"], \"danger\");\r\n    } else {\r\n      handleAlert(`${messageAlert}`, \"success\");\r\n    }\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    const res = await APICitas.deleteCitaNotification({\r\n      cita: selectedCita,\r\n    });\r\n    checkResponse(res);\r\n  };\r\n\r\n  return (\r\n    <Modal show={show} onHide={handleClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Eliminar Cita</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>{`¿${message}: ${selectedCita.appointment_date}?`}</Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={handleClose}>\r\n          Cancelar\r\n        </Button>\r\n        <Button variant=\"primary\" onClick={handleDelete}>\r\n          Eliminar\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\n// const ModalUpdateCita = ({\r\n//   show,\r\n//   handleClose,\r\n//   selectedCita,\r\n//   setAlert,\r\n//   setAlertMsg,\r\n//   setAlertVariant,\r\n// }) => {\r\n//   const [formUser, setFormUser] = useState({\r\n//     firstName: selectedCita.first_name,\r\n//     lastName: selectedCita.last_name,\r\n//     phone: selectedCita.phone,\r\n//     status: selectedCita.status,\r\n//   });\r\n\r\n//   const handleChange = (e) => {\r\n//     setFormUser({\r\n//       ...formUser,\r\n//       [e.target.name]: e.target.value,\r\n//     });\r\n//   };\r\n\r\n//   const handleAlert = (msg, variant) => {\r\n//     setAlert(true);\r\n//     setAlertMsg(msg);\r\n//     setAlertVariant(variant);\r\n//     setTimeout(() => {\r\n//       setAlert(false);\r\n//       setAlertMsg(\"\");\r\n//       setAlertVariant(\"\");\r\n//     }, 3000);\r\n//     handleClose();\r\n//   };\r\n\r\n//   const checkResponse = (res) => {\r\n//     if (res[1].status === 400) {\r\n//       handleAlert(res[0][\"message\"], \"danger\");\r\n//     } else {\r\n//       handleAlert(\"Usuario modificado correctamente.\", \"success\");\r\n//     }\r\n//   };\r\n\r\n//   const updateUser = async () => {\r\n//     const res = await APIUsers.updateUser({\r\n//       id: selectedCita.user_id,\r\n//       firstName: formUser.firstName,\r\n//       lastName: formUser.lastName,\r\n//       phone: formUser.phone,\r\n//       status: formUser.status,\r\n//       fecha: selectedCita.appointment_date.split(\" \")[0],\r\n//       hora: selectedCita.appointment_date\r\n//         .split(\" \")\r\n//         .slice(1)\r\n//         .toString()\r\n//         .replace(\",\", \" \"),\r\n//     });\r\n//     checkResponse(res);\r\n//   };\r\n\r\n//   return (\r\n//     <Modal show={show} onHide={handleClose}>\r\n//       <Modal.Header closeButton>\r\n//         <Modal.Title>Editar Usuario</Modal.Title>\r\n//       </Modal.Header>\r\n//       <Modal.Body>\r\n//         <Form>\r\n//           <Form.Group className=\"mb-3\" controlId=\"formNombre\">\r\n//             <Form.Label>Nombre del Usuario</Form.Label>\r\n//             <Form.Control\r\n//               value={formUser.firstName}\r\n//               onChange={handleChange}\r\n//               name=\"firstName\"\r\n//               type=\"text\"\r\n//               placeholder=\"Nombre del Usuario\"\r\n//             />\r\n//           </Form.Group>\r\n//           <Form.Group className=\"mb-3\" controlId=\"formApellidos\">\r\n//             <Form.Label>Apellidos</Form.Label>\r\n//             <Form.Control\r\n//               value={formUser.lastName}\r\n//               onChange={handleChange}\r\n//               name=\"lastName\"\r\n//               type=\"text\"\r\n//               placeholder=\"Apellidos del Usuario\"\r\n//             />\r\n//           </Form.Group>\r\n//           <Form.Group className=\"mb-3\" controlId=\"formPhone\">\r\n//             <Form.Label>Número de teléfono del Usuario</Form.Label>\r\n//             <Form.Control\r\n//               value={formUser.phone}\r\n//               onChange={handleChange}\r\n//               name=\"phone\"\r\n//               type=\"text\"\r\n//               placeholder=\"Teléfono del Usuario\"\r\n//             />\r\n//           </Form.Group>\r\n//           <Form.Group className=\"mb-3\" controlId=\"formStatus\">\r\n//             <Form.Label>Status del Usuario</Form.Label>\r\n//             <Form.Control\r\n//               as=\"select\"\r\n//               value={formUser.status}\r\n//               onChange={handleChange}\r\n//               name=\"status\"\r\n//             >\r\n//               <option disabled value={-1}>\r\n//                 Status actual: {selectedCita.status}\r\n//               </option>\r\n//               <option>Cliente</option>\r\n//               <option>Administrador</option>\r\n//             </Form.Control>\r\n//           </Form.Group>\r\n//         </Form>\r\n//       </Modal.Body>\r\n//       <Modal.Footer>\r\n//         <Button variant=\"secondary\" onClick={handleClose}>\r\n//           Cancelar\r\n//         </Button>\r\n//         <Button variant=\"primary\" onClick={updateUser}>\r\n//           Editar\r\n//         </Button>\r\n//       </Modal.Footer>\r\n//     </Modal>\r\n//   );\r\n// };\r\n\r\nexport { ModalRemoveCita, ModalApprovedCita };\r\n","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\AccountPage\\Admin\\Gestion\\Citas\\CitasAprobadas\\GestionCitasAprobadas.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\AccountPage\\Admin\\Registros\\Citas\\RegisterCita.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\CartPage\\CartPage.jsx",["187"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { APIPedidos, IMG_URL } from \"../../api/api\";\r\nimport useAuth from \"../../auth/useAuth\";\r\nimport { CartContext } from \"../../layouts/Layout\";\r\nimport { Alert, Container } from \"react-bootstrap\";\r\nimport styles from \"./CartPage.module.css\";\r\nimport { validateEmail } from \"../../components/Validations\";\r\n\r\nconst CartPage = () => {\r\n  const {\r\n    cart,\r\n    setCart,\r\n    addedProduct,\r\n    setAddedProduct,\r\n    cartTotal,\r\n    cartRef,\r\n    setCartTotal,\r\n    clearCartInputs,\r\n  } = useContext(CartContext);\r\n\r\n  const { user } = useAuth();\r\n  const [hasLoaded, setHasLoaded] = useState(false);\r\n  const [userForm, setUserForm] = useState({\r\n    nombre: user?.first_name ?? \"\",\r\n    apellido: user?.last_name ?? \"\",\r\n    telefono: user?.phone ?? \"\",\r\n    email: user?.email ?? \"\",\r\n    direccion: \"\",\r\n    codigoPostal: \"\",\r\n  });\r\n\r\n  const [alert, setAlert] = useState();\r\n  const [alertMsg, setAlertMsg] = useState();\r\n  const [alertVariant, setAlertVariant] = useState();\r\n\r\n  const handleChange = (e) => {\r\n    setUserForm({\r\n      ...userForm,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleAlert = (msg, variant) => {\r\n    setAlert(true);\r\n    setAlertMsg(msg);\r\n    setAlertVariant(variant);\r\n    setTimeout(() => {\r\n      setAlert(false);\r\n      setAlertMsg(\"\");\r\n      setAlertVariant(\"\");\r\n    }, 2000);\r\n  };\r\n\r\n  const arrayMove = (arr, fromIndex, toIndex) => {\r\n    const element = arr[fromIndex];\r\n    arr.splice(fromIndex, 1);\r\n    arr.splice(toIndex, 0, element);\r\n  };\r\n\r\n  const addProduct = (product, oldIndex) => {\r\n    setHasLoaded(false);\r\n    const filteredProduct = cartRef.current.filter(\r\n      (item) => item.product_id === product.product_id\r\n    );\r\n\r\n    filteredProduct[0].totalNum += 1;\r\n\r\n    const filteredProducts = getArrayItems(product);\r\n\r\n    setObjectValues(filteredProducts, filteredProduct, oldIndex);\r\n\r\n    setCart(cart + 1);\r\n    setCartTotal(cartTotal + product.price);\r\n\r\n    setHasLoaded(true);\r\n  };\r\n\r\n  const setObjectValues = (filteredProducts, filteredProduct, oldIndex) => {\r\n    Array.prototype.push.apply(filteredProducts, filteredProduct);\r\n\r\n    const newIndex = filteredProducts.length - 1;\r\n\r\n    arrayMove(filteredProducts, newIndex, oldIndex);\r\n\r\n    cartRef.current = filteredProducts;\r\n    setAddedProduct(filteredProducts);\r\n  };\r\n\r\n  const getArrayItems = (product) => {\r\n    const filteredProducts = cartRef.current.filter(\r\n      (item) => item.product_id !== product.product_id\r\n    );\r\n\r\n    return filteredProducts;\r\n  };\r\n\r\n  const deleteProduct = (product, oldIndex) => {\r\n    setHasLoaded(false);\r\n    const filteredProduct = cartRef.current.filter(\r\n      (item) => item.product_id === product.product_id\r\n    );\r\n\r\n    if (filteredProduct[0].totalNum > 0) {\r\n      filteredProduct[0].totalNum -= 1;\r\n\r\n      const filteredProducts = getArrayItems(product);\r\n\r\n      setObjectValues(filteredProducts, filteredProduct, oldIndex);\r\n\r\n      setCart(cart - 1);\r\n      setCartTotal(cartTotal - product.price);\r\n\r\n      setHasLoaded(true);\r\n    }\r\n\r\n    if (filteredProduct[0].totalNum <= 0) {\r\n      cartRef.current.splice(oldIndex, 1);\r\n      setHasLoaded(true);\r\n    }\r\n  };\r\n\r\n  const clearInputs = () => {\r\n    setUserForm({\r\n      nombre: user?.first_name ?? \"\",\r\n      apellido: user?.last_name ?? \"\",\r\n      telefono: user?.phone ?? \"\",\r\n      email: user?.email ?? \"\",\r\n      direccion: \"\",\r\n      codigoPostal: \"\",\r\n    });\r\n    setAddedProduct([]);\r\n    cartRef.current = addedProduct;\r\n    setCart(0);\r\n    setCartTotal(0);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    let validate = 0;\r\n    Object.entries(userForm).forEach(([key, value]) => {\r\n      if (value === \"\" || value.trim() === \"\") {\r\n        handleAlert(\"No puedes dejar espacios en blanco\", \"danger\");\r\n        validate = 1;\r\n        return;\r\n      }\r\n\r\n      if (key === \"telefono\") {\r\n        if (isNaN(userForm[\"telefono\"]) || userForm[\"telefono\"].length !== 10) {\r\n          handleAlert(\r\n            \"El teléfono está incorrecto, debe ser un número de 10 caracteres\",\r\n            \"danger\"\r\n          );\r\n          validate = 1;\r\n          return;\r\n        }\r\n      }\r\n\r\n      if (key === \"codigoPostal\") {\r\n        if (\r\n          isNaN(\r\n            userForm[\"codigoPostal\"] || userForm[\"codigoPostal\"].length !== 5\r\n          )\r\n        ) {\r\n          handleAlert(\r\n            \"Código postal incorrecto, deber ser un número de 5 caracteres\",\r\n            \"danger\"\r\n          );\r\n          validate = 1;\r\n          return;\r\n        }\r\n      }\r\n\r\n      if (key === \"email\") {\r\n        if (!validateEmail(userForm[\"email\"])) {\r\n          handleAlert(\"El formato del email no es correcto\", \"danger\");\r\n          validate = 1;\r\n          return;\r\n        }\r\n      }\r\n    });\r\n\r\n    if (validate === 0) {\r\n      const data = { ...userForm, Pedidos: cartRef.current, Total: cartTotal };\r\n      const res = await APIPedidos.createPedido({\r\n        data,\r\n      });\r\n      if (res[1].status === 400) {\r\n        handleAlert(res[0][\"message\"], \"danger\");\r\n      } else {\r\n        clearCartInputs();\r\n        handleAlert(res[0][\"Response\"], \"success\");\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    addedProduct.forEach((value) => {\r\n      const productId = value.product_id;\r\n      let totalNum = 0;\r\n\r\n      addedProduct.forEach((actualProduct) => {\r\n        if (actualProduct.product_id === productId) {\r\n          if (actualProduct.hasOwnProperty(\"totalNum\")) {\r\n            totalNum = actualProduct.totalNum;\r\n          } else {\r\n            totalNum += 1;\r\n          }\r\n        }\r\n      });\r\n      value.totalNum = totalNum;\r\n    });\r\n\r\n    const unique = [\r\n      ...new Map(\r\n        addedProduct.map((item) => [item[\"product_id\"], item])\r\n      ).values(),\r\n    ];\r\n\r\n    cartRef.current = unique;\r\n\r\n    setHasLoaded(true);\r\n  }, [addedProduct, cartRef]);\r\n\r\n  return (\r\n    <Container className={styles.cartContainer}>\r\n      <div className=\"py-5 text-center\">\r\n        <img\r\n          className=\"d-block mx-auto mb-5\"\r\n          src=\"https://image.flaticon.com/icons/png/512/3594/3594363.png\"\r\n          alt=\"\"\r\n          width=\"72\"\r\n          height=\"72\"\r\n        />\r\n        <h2>Carrito de Compras</h2>\r\n        <p className=\"lead\">\r\n          Para proceder con su compra verifique sus datos y complete los campos\r\n          vacios. Recibirá un correo cuando su pedido haya sido aprobado.\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        {alert ? (\r\n          <Alert variant={alertVariant} className=\"w-100 mx-auto\">\r\n            {alertMsg}\r\n          </Alert>\r\n        ) : null}\r\n        <div className=\"col-md-4 order-md-2 mb-4\">\r\n          <h4 className=\"d-flex justify-content-between align-items-center mb-3\">\r\n            <span className=\"text-muted\">Carrito</span>\r\n            <span className=\"badge badge-secondary badge-pill\">{cart}</span>\r\n          </h4>\r\n          <ul className=\"list-group mb-3\">\r\n            {hasLoaded\r\n              ? cartRef.current.map((product) => {\r\n                  return (\r\n                    <li\r\n                      key={product.product_id}\r\n                      className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap lh-condensed\"\r\n                    >\r\n                      <div className={styles.productCont}>\r\n                        <div className={styles.productInfo}>\r\n                          <h6 className=\"my-0\">{product.name}</h6>\r\n                          <small className=\"text-muted\">\r\n                            {product.descripcion}\r\n                          </small>\r\n                        </div>\r\n                        <div className={styles.imgCont}>\r\n                          <img src={`${IMG_URL}${product.img}`} alt=\"\" />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"d-flex flex-column\">\r\n                        <span className=\"text-muted\">\r\n                          ${product.totalNum * product.price}\r\n                        </span>\r\n                        <span>Cantidad: {product.totalNum}</span>\r\n                        <div className={styles.buttons}>\r\n                          <button\r\n                            className=\"btn btn-success\"\r\n                            onClick={() =>\r\n                              addProduct(\r\n                                product,\r\n                                cartRef.current.indexOf(product)\r\n                              )\r\n                            }\r\n                          >\r\n                            +\r\n                          </button>\r\n                          <button\r\n                            className=\"btn btn-danger\"\r\n                            onClick={() =>\r\n                              deleteProduct(\r\n                                product,\r\n                                cartRef.current.indexOf(product)\r\n                              )\r\n                            }\r\n                          >\r\n                            -\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </li>\r\n                  );\r\n                })\r\n              : null}\r\n            <li className=\"list-group-item d-flex justify-content-between\">\r\n              <span>Total</span>\r\n              <strong>{`$${cartTotal}`}</strong>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"col-md-8 order-md-1\">\r\n          <h4 className=\"mb-3\">Datos del Usuario</h4>\r\n          <form>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6 mb-3\">\r\n                <label for=\"nombre\">Nombre</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"nombre\"\r\n                  name=\"nombre\"\r\n                  placeholder=\"\"\r\n                  value={userForm.nombre}\r\n                  onChange={handleChange}\r\n                  disabled={userForm.email ? true : false}\r\n                />\r\n              </div>\r\n              <div className=\"col-md-6 mb-3\">\r\n                <label for=\"apellido\">Apellidos</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"apellido\"\r\n                  name=\"apellido\"\r\n                  placeholder=\"\"\r\n                  value={userForm.apellido}\r\n                  onChange={handleChange}\r\n                  disabled={userForm.email ? true : false}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"mb-3\">\r\n              <label for=\"telefono\">Teléfono</label>\r\n              <div className=\"input-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"telefono\"\r\n                  name=\"telefono\"\r\n                  placeholder=\"Ejemplo: 4433609253\"\r\n                  value={userForm.telefono}\r\n                  onChange={handleChange}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"mb-3\">\r\n              <label for=\"email\">Email</label>\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"usuario@ejemplo.com\"\r\n                value={userForm.email}\r\n                onChange={handleChange}\r\n                disabled={userForm.email ? true : false}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"mb-3\">\r\n              <label for=\"direccion\">Dirección</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"direccion\"\r\n                name=\"direccion\"\r\n                placeholder=\"Dirección\"\r\n                value={userForm.direccion}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div class=\"mb-3\">\r\n              <label for=\"codigoPostal\">Código Postal</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"codigoPostal\"\r\n                name=\"codigoPostal\"\r\n                placeholder=\"Código Postal\"\r\n                value={userForm.codigoPostal}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <hr class=\"mb-4\" />\r\n            <button\r\n              class=\"btn btn-primary btn-lg btn-block\"\r\n              onClick={handleSubmit}\r\n            >\r\n              Realizar Pedido\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CartPage;\r\n","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\components\\Validations.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\AccountPage\\User\\Pedidos\\Pedidos.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\AccountPage\\Admin\\Gestion\\Pedidos\\GestionarPedidos.jsx",["188","189"],"import React, { useEffect, useState } from \"react\";\r\nimport { Container, Table } from \"react-bootstrap\";\r\nimport {\r\n  Alerts,\r\n  ModalDeleteProduct,\r\n  // ModalUpdate,\r\n} from \"../../../../../components/FormUtilities\";\r\nimport { ModalUpdate } from \"./GestionPedidosUtilitites\";\r\nimport styles from \"./GestionarPedidos.module.css\";\r\n\r\nconst GestionarPedidos = () => {\r\n  const [pedidos, setPedidos] = useState();\r\n  const [show, setShow] = useState(false);\r\n  const [selectedPedido, setSelectedPedido] = useState();\r\n  const [deletePedido, setDeletePedido] = useState(false);\r\n\r\n  const [alert, setAlert] = useState();\r\n  const [alertMsg, setAlertMsg] = useState();\r\n  const [alertVariant, setAlertVariant] = useState();\r\n\r\n  const handleShow = (pedido) => {\r\n    setShow(!show);\r\n    setSelectedPedido(pedido);\r\n  };\r\n\r\n  const getPedidos = async () => {\r\n    const res = await fetch(\"/pedidos/getAllPedidos\");\r\n    const json = await res.json();\r\n    setPedidos(json);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPedidos();\r\n  }, [show, deletePedido]);\r\n\r\n  return (\r\n    <Container fluid className={styles.container}>\r\n      <h1 className=\"text-center pt-4\">Gestión de Pedidos</h1>\r\n      <div className={styles.tableCont}>\r\n        {alert ? Alerts(alertMsg, alertVariant, setAlert) : null}\r\n        <Table striped className=\"\" responsive>\r\n          <thead className={styles.tableHead}>\r\n            <tr className=\"text-center\">\r\n              <th>ID</th>\r\n              <th>Cliente</th>\r\n              <th>Dirección</th>\r\n              <th>Fecha del Pedido</th>\r\n              <th>Total</th>\r\n              <th>Status</th>\r\n              <th>Modificar</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {pedidos ? (\r\n              Object.keys(pedidos).map((item) => {\r\n                return (\r\n                  <tr className=\"text-center\" key={pedidos[item].pedido_id}>\r\n                    <td>{`#${pedidos[item].pedido_id}`}</td>\r\n                    <td>{pedidos[item].user_id}</td>\r\n                    <td>{`${pedidos[item].direccion}, ${pedidos[item].codigo_postal}`}</td>\r\n                    <td>{pedidos[item].date}</td>\r\n                    <td>{`$${pedidos[item].total}`}</td>\r\n                    <td>{pedidos[item].status}</td>\r\n                    <td>\r\n                      <div className={styles.btnContainer}>\r\n                        <div\r\n                          className={styles.editIcon}\r\n                          onClick={() => handleShow(pedidos[item])}\r\n                        >\r\n                          <i className=\"bx bxs-edit\"></i>\r\n                        </div>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })\r\n            ) : (\r\n              <tr>\r\n                <td>Loading</td>\r\n              </tr>\r\n            )}\r\n            {show ? (\r\n              <ModalUpdate\r\n                show={show}\r\n                handleClose={handleShow}\r\n                selectedPedido={selectedPedido}\r\n                setAlert={setAlert}\r\n                setAlertMsg={setAlertMsg}\r\n                setAlertVariant={setAlertVariant}\r\n              />\r\n            ) : null}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default GestionarPedidos;\r\n","C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\AccountPage\\Admin\\Gestion\\Pedidos\\GestionPedidosUtilitites.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\pages\\AccountPage\\User\\Account\\UserAccount.jsx",[],"C:\\Users\\ederivc\\Documents\\PuppyVeterinarySystem\\frontend\\src\\keys\\keys.js",[],{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","replacedBy":"193"},{"ruleId":"194","severity":1,"message":"195","line":18,"column":10,"nodeType":"196","messageId":"197","endLine":18,"endColumn":15},{"ruleId":"194","severity":1,"message":"198","line":19,"column":10,"nodeType":"196","messageId":"197","endLine":19,"endColumn":19},{"ruleId":"194","severity":1,"message":"199","line":1,"column":20,"nodeType":"196","messageId":"197","endLine":1,"endColumn":28},{"ruleId":"194","severity":1,"message":"200","line":2,"column":10,"nodeType":"196","messageId":"197","endLine":2,"endColumn":15},{"ruleId":"194","severity":1,"message":"201","line":2,"column":25,"nodeType":"196","messageId":"197","endLine":2,"endColumn":29},{"ruleId":"194","severity":1,"message":"202","line":3,"column":10,"nodeType":"196","messageId":"197","endLine":3,"endColumn":18},{"ruleId":"194","severity":1,"message":"203","line":122,"column":9,"nodeType":"196","messageId":"197","endLine":122,"endColumn":20},{"ruleId":"194","severity":1,"message":"204","line":5,"column":3,"nodeType":"196","messageId":"197","endLine":5,"endColumn":21},{"ruleId":"194","severity":1,"message":"205","line":15,"column":24,"nodeType":"196","messageId":"197","endLine":15,"endColumn":39},"no-native-reassign",["206"],"no-negated-in-lhs",["207"],"no-unused-vars","'dates' is assigned a value but never used.","Identifier","unusedVar","'hasLoaded' is assigned a value but never used.","'APIUsers' is defined but never used.","'Alert' is defined but never used.","'Form' is defined but never used.","'useState' is defined but never used.","'clearInputs' is assigned a value but never used.","'ModalDeleteProduct' is defined but never used.","'setDeletePedido' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]