{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ederivc\\\\Documents\\\\NEWHEROKU\\\\frontend\\\\src\\\\pages\\\\AccountPage\\\\Admin\\\\Gestion\\\\Citas\\\\CitasUtilities.jsx\";\nimport { APICitas, APIUsers } from \"../../../../../api/api\";\nimport { Alert, Button, Form, Modal } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ModalApprovedCita = ({\n  show,\n  handleClose,\n  selectedCita,\n  setAlert,\n  setAlertMsg,\n  setAlertVariant,\n  message\n}) => {\n  const handleAlert = (msg, variant) => {\n    setAlert(true);\n    setAlertMsg(msg);\n    setAlertVariant(variant);\n    setTimeout(() => {\n      setAlert(false);\n      setAlertMsg(\"\");\n      setAlertVariant(\"\");\n    }, 3000);\n    handleClose();\n  };\n\n  const checkResponse = res => {\n    console.log(res);\n\n    if (res[1].status === 400) {\n      handleAlert(res[0][\"message\"], \"danger\");\n    } else {\n      handleAlert(\"Notificación al usuario hecha y cita aprovada.\", \"success\");\n    }\n  };\n\n  const handleDelete = async () => {\n    const res = await APICitas.ApproveCita({\n      cita: selectedCita\n    });\n    checkResponse(res);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    onHide: handleClose,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"Aprovar Cita\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: `¿Está seguro que desa aprovar y notificar al cliente de la cita con fecha : ${selectedCita.appointment_date}?`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        onClick: handleClose,\n        children: \"Cancelar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: handleDelete,\n        children: \"Aprovar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ModalApprovedCita;\n\nconst ModalRemoveCita = ({\n  show,\n  handleClose,\n  selectedCita,\n  setAlert,\n  setAlertMsg,\n  setAlertVariant,\n  message,\n  messageAlert\n}) => {\n  const handleAlert = (msg, variant) => {\n    setAlert(true);\n    setAlertMsg(msg);\n    setAlertVariant(variant);\n    setTimeout(() => {\n      setAlert(false);\n      setAlertMsg(\"\");\n      setAlertVariant(\"\");\n    }, 3000);\n    handleClose();\n  };\n\n  const checkResponse = res => {\n    if (res[1].status === 400) {\n      handleAlert(res[0][\"message\"], \"danger\");\n    } else {\n      handleAlert(`${messageAlert}`, \"success\");\n    }\n  };\n\n  const handleDelete = async () => {\n    const res = await APICitas.deleteCitaNotification({\n      cita: selectedCita\n    });\n    checkResponse(res);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    onHide: handleClose,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"Eliminar Cita\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: `¿${message}: ${selectedCita.appointment_date}?`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        onClick: handleClose,\n        children: \"Cancelar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: handleDelete,\n        children: \"Eliminar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}; // const ModalUpdateCita = ({\n//   show,\n//   handleClose,\n//   selectedCita,\n//   setAlert,\n//   setAlertMsg,\n//   setAlertVariant,\n// }) => {\n//   const [formUser, setFormUser] = useState({\n//     firstName: selectedCita.first_name,\n//     lastName: selectedCita.last_name,\n//     phone: selectedCita.phone,\n//     status: selectedCita.status,\n//   });\n//   const handleChange = (e) => {\n//     setFormUser({\n//       ...formUser,\n//       [e.target.name]: e.target.value,\n//     });\n//   };\n//   const handleAlert = (msg, variant) => {\n//     setAlert(true);\n//     setAlertMsg(msg);\n//     setAlertVariant(variant);\n//     setTimeout(() => {\n//       setAlert(false);\n//       setAlertMsg(\"\");\n//       setAlertVariant(\"\");\n//     }, 3000);\n//     handleClose();\n//   };\n//   const checkResponse = (res) => {\n//     if (res[1].status === 400) {\n//       handleAlert(res[0][\"message\"], \"danger\");\n//     } else {\n//       handleAlert(\"Usuario modificado correctamente.\", \"success\");\n//     }\n//   };\n//   const updateUser = async () => {\n//     const res = await APIUsers.updateUser({\n//       id: selectedCita.user_id,\n//       firstName: formUser.firstName,\n//       lastName: formUser.lastName,\n//       phone: formUser.phone,\n//       status: formUser.status,\n//       fecha: selectedCita.appointment_date.split(\" \")[0],\n//       hora: selectedCita.appointment_date\n//         .split(\" \")\n//         .slice(1)\n//         .toString()\n//         .replace(\",\", \" \"),\n//     });\n//     checkResponse(res);\n//   };\n//   return (\n//     <Modal show={show} onHide={handleClose}>\n//       <Modal.Header closeButton>\n//         <Modal.Title>Editar Usuario</Modal.Title>\n//       </Modal.Header>\n//       <Modal.Body>\n//         <Form>\n//           <Form.Group className=\"mb-3\" controlId=\"formNombre\">\n//             <Form.Label>Nombre del Usuario</Form.Label>\n//             <Form.Control\n//               value={formUser.firstName}\n//               onChange={handleChange}\n//               name=\"firstName\"\n//               type=\"text\"\n//               placeholder=\"Nombre del Usuario\"\n//             />\n//           </Form.Group>\n//           <Form.Group className=\"mb-3\" controlId=\"formApellidos\">\n//             <Form.Label>Apellidos</Form.Label>\n//             <Form.Control\n//               value={formUser.lastName}\n//               onChange={handleChange}\n//               name=\"lastName\"\n//               type=\"text\"\n//               placeholder=\"Apellidos del Usuario\"\n//             />\n//           </Form.Group>\n//           <Form.Group className=\"mb-3\" controlId=\"formPhone\">\n//             <Form.Label>Número de teléfono del Usuario</Form.Label>\n//             <Form.Control\n//               value={formUser.phone}\n//               onChange={handleChange}\n//               name=\"phone\"\n//               type=\"text\"\n//               placeholder=\"Teléfono del Usuario\"\n//             />\n//           </Form.Group>\n//           <Form.Group className=\"mb-3\" controlId=\"formStatus\">\n//             <Form.Label>Status del Usuario</Form.Label>\n//             <Form.Control\n//               as=\"select\"\n//               value={formUser.status}\n//               onChange={handleChange}\n//               name=\"status\"\n//             >\n//               <option disabled value={-1}>\n//                 Status actual: {selectedCita.status}\n//               </option>\n//               <option>Cliente</option>\n//               <option>Administrador</option>\n//             </Form.Control>\n//           </Form.Group>\n//         </Form>\n//       </Modal.Body>\n//       <Modal.Footer>\n//         <Button variant=\"secondary\" onClick={handleClose}>\n//           Cancelar\n//         </Button>\n//         <Button variant=\"primary\" onClick={updateUser}>\n//           Editar\n//         </Button>\n//       </Modal.Footer>\n//     </Modal>\n//   );\n// };\n\n\n_c2 = ModalRemoveCita;\nexport { ModalRemoveCita, ModalApprovedCita };\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ModalApprovedCita\");\n$RefreshReg$(_c2, \"ModalRemoveCita\");","map":{"version":3,"sources":["C:/Users/ederivc/Documents/NEWHEROKU/frontend/src/pages/AccountPage/Admin/Gestion/Citas/CitasUtilities.jsx"],"names":["APICitas","APIUsers","Alert","Button","Form","Modal","useState","ModalApprovedCita","show","handleClose","selectedCita","setAlert","setAlertMsg","setAlertVariant","message","handleAlert","msg","variant","setTimeout","checkResponse","res","console","log","status","handleDelete","ApproveCita","cita","appointment_date","ModalRemoveCita","messageAlert","deleteCitaNotification"],"mappings":"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","sourcesContent":["import { APICitas, APIUsers } from \"../../../../../api/api\";\r\nimport { Alert, Button, Form, Modal } from \"react-bootstrap\";\r\nimport { useState } from \"react\";\r\n\r\nconst ModalApprovedCita = ({\r\n  show,\r\n  handleClose,\r\n  selectedCita,\r\n  setAlert,\r\n  setAlertMsg,\r\n  setAlertVariant,\r\n  message,\r\n}) => {\r\n  const handleAlert = (msg, variant) => {\r\n    setAlert(true);\r\n    setAlertMsg(msg);\r\n    setAlertVariant(variant);\r\n    setTimeout(() => {\r\n      setAlert(false);\r\n      setAlertMsg(\"\");\r\n      setAlertVariant(\"\");\r\n    }, 3000);\r\n    handleClose();\r\n  };\r\n\r\n  const checkResponse = (res) => {\r\n    console.log(res);\r\n    if (res[1].status === 400) {\r\n      handleAlert(res[0][\"message\"], \"danger\");\r\n    } else {\r\n      handleAlert(\"Notificación al usuario hecha y cita aprovada.\", \"success\");\r\n    }\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    const res = await APICitas.ApproveCita({\r\n      cita: selectedCita,\r\n    });\r\n    checkResponse(res);\r\n  };\r\n\r\n  return (\r\n    <Modal show={show} onHide={handleClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Aprovar Cita</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>{`¿Está seguro que desa aprovar y notificar al cliente de la cita con fecha : ${selectedCita.appointment_date}?`}</Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={handleClose}>\r\n          Cancelar\r\n        </Button>\r\n        <Button variant=\"primary\" onClick={handleDelete}>\r\n          Aprovar\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst ModalRemoveCita = ({\r\n  show,\r\n  handleClose,\r\n  selectedCita,\r\n  setAlert,\r\n  setAlertMsg,\r\n  setAlertVariant,\r\n  message,\r\n  messageAlert,\r\n}) => {\r\n  const handleAlert = (msg, variant) => {\r\n    setAlert(true);\r\n    setAlertMsg(msg);\r\n    setAlertVariant(variant);\r\n    setTimeout(() => {\r\n      setAlert(false);\r\n      setAlertMsg(\"\");\r\n      setAlertVariant(\"\");\r\n    }, 3000);\r\n    handleClose();\r\n  };\r\n\r\n  const checkResponse = (res) => {\r\n    if (res[1].status === 400) {\r\n      handleAlert(res[0][\"message\"], \"danger\");\r\n    } else {\r\n      handleAlert(`${messageAlert}`, \"success\");\r\n    }\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    const res = await APICitas.deleteCitaNotification({\r\n      cita: selectedCita,\r\n    });\r\n    checkResponse(res);\r\n  };\r\n\r\n  return (\r\n    <Modal show={show} onHide={handleClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Eliminar Cita</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>{`¿${message}: ${selectedCita.appointment_date}?`}</Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={handleClose}>\r\n          Cancelar\r\n        </Button>\r\n        <Button variant=\"primary\" onClick={handleDelete}>\r\n          Eliminar\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\n// const ModalUpdateCita = ({\r\n//   show,\r\n//   handleClose,\r\n//   selectedCita,\r\n//   setAlert,\r\n//   setAlertMsg,\r\n//   setAlertVariant,\r\n// }) => {\r\n//   const [formUser, setFormUser] = useState({\r\n//     firstName: selectedCita.first_name,\r\n//     lastName: selectedCita.last_name,\r\n//     phone: selectedCita.phone,\r\n//     status: selectedCita.status,\r\n//   });\r\n\r\n//   const handleChange = (e) => {\r\n//     setFormUser({\r\n//       ...formUser,\r\n//       [e.target.name]: e.target.value,\r\n//     });\r\n//   };\r\n\r\n//   const handleAlert = (msg, variant) => {\r\n//     setAlert(true);\r\n//     setAlertMsg(msg);\r\n//     setAlertVariant(variant);\r\n//     setTimeout(() => {\r\n//       setAlert(false);\r\n//       setAlertMsg(\"\");\r\n//       setAlertVariant(\"\");\r\n//     }, 3000);\r\n//     handleClose();\r\n//   };\r\n\r\n//   const checkResponse = (res) => {\r\n//     if (res[1].status === 400) {\r\n//       handleAlert(res[0][\"message\"], \"danger\");\r\n//     } else {\r\n//       handleAlert(\"Usuario modificado correctamente.\", \"success\");\r\n//     }\r\n//   };\r\n\r\n//   const updateUser = async () => {\r\n//     const res = await APIUsers.updateUser({\r\n//       id: selectedCita.user_id,\r\n//       firstName: formUser.firstName,\r\n//       lastName: formUser.lastName,\r\n//       phone: formUser.phone,\r\n//       status: formUser.status,\r\n//       fecha: selectedCita.appointment_date.split(\" \")[0],\r\n//       hora: selectedCita.appointment_date\r\n//         .split(\" \")\r\n//         .slice(1)\r\n//         .toString()\r\n//         .replace(\",\", \" \"),\r\n//     });\r\n//     checkResponse(res);\r\n//   };\r\n\r\n//   return (\r\n//     <Modal show={show} onHide={handleClose}>\r\n//       <Modal.Header closeButton>\r\n//         <Modal.Title>Editar Usuario</Modal.Title>\r\n//       </Modal.Header>\r\n//       <Modal.Body>\r\n//         <Form>\r\n//           <Form.Group className=\"mb-3\" controlId=\"formNombre\">\r\n//             <Form.Label>Nombre del Usuario</Form.Label>\r\n//             <Form.Control\r\n//               value={formUser.firstName}\r\n//               onChange={handleChange}\r\n//               name=\"firstName\"\r\n//               type=\"text\"\r\n//               placeholder=\"Nombre del Usuario\"\r\n//             />\r\n//           </Form.Group>\r\n//           <Form.Group className=\"mb-3\" controlId=\"formApellidos\">\r\n//             <Form.Label>Apellidos</Form.Label>\r\n//             <Form.Control\r\n//               value={formUser.lastName}\r\n//               onChange={handleChange}\r\n//               name=\"lastName\"\r\n//               type=\"text\"\r\n//               placeholder=\"Apellidos del Usuario\"\r\n//             />\r\n//           </Form.Group>\r\n//           <Form.Group className=\"mb-3\" controlId=\"formPhone\">\r\n//             <Form.Label>Número de teléfono del Usuario</Form.Label>\r\n//             <Form.Control\r\n//               value={formUser.phone}\r\n//               onChange={handleChange}\r\n//               name=\"phone\"\r\n//               type=\"text\"\r\n//               placeholder=\"Teléfono del Usuario\"\r\n//             />\r\n//           </Form.Group>\r\n//           <Form.Group className=\"mb-3\" controlId=\"formStatus\">\r\n//             <Form.Label>Status del Usuario</Form.Label>\r\n//             <Form.Control\r\n//               as=\"select\"\r\n//               value={formUser.status}\r\n//               onChange={handleChange}\r\n//               name=\"status\"\r\n//             >\r\n//               <option disabled value={-1}>\r\n//                 Status actual: {selectedCita.status}\r\n//               </option>\r\n//               <option>Cliente</option>\r\n//               <option>Administrador</option>\r\n//             </Form.Control>\r\n//           </Form.Group>\r\n//         </Form>\r\n//       </Modal.Body>\r\n//       <Modal.Footer>\r\n//         <Button variant=\"secondary\" onClick={handleClose}>\r\n//           Cancelar\r\n//         </Button>\r\n//         <Button variant=\"primary\" onClick={updateUser}>\r\n//           Editar\r\n//         </Button>\r\n//       </Modal.Footer>\r\n//     </Modal>\r\n//   );\r\n// };\r\n\r\nexport { ModalRemoveCita, ModalApprovedCita };\r\n"]},"metadata":{},"sourceType":"module"}