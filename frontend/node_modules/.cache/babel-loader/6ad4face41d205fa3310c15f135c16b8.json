{"ast":null,"code":"function getCookie(name) {\n  let cookieValue = \"\";\n\n  if (document.cookie && document.cookie !== \"\") {\n    const cookies = document.cookie.split(\";\");\n\n    for (let i = 0; i < cookies.length; i++) {\n      const cookie = cookies[i].trim();\n\n      if (cookie.substring(0, name.length + 1) === name + \"=\") {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n\n  return cookieValue;\n}\n\nclass APIUsers {\n  static async login(data) {\n    const csrfToken = getCookie(\"csrftoken\");\n    const response = await fetch(\"/auth/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": csrfToken\n      },\n      body: JSON.stringify(data)\n    });\n    return response;\n  }\n\n  static async createUser(data) {\n    const csrfToken = getCookie(\"csrftoken\");\n    const response = await fetch(\"/users/createUser\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": csrfToken\n      },\n      body: JSON.stringify(data)\n    });\n    const json = await response.json();\n    return [json, response];\n  }\n\n  static async deleteUser({\n    user\n  }) {\n    const csrfToken = getCookie(\"csrftoken\");\n    const response = await fetch(`/users/deleteUser/${user.user_id}/`, {\n      method: \"DELETE\",\n      headers: {\n        \"X-CSRFToken\": csrfToken\n      }\n    });\n    const json = await response.json();\n    return [json, response];\n  }\n\n  static async updateUser(data) {\n    const csrfToken = getCookie(\"csrftoken\");\n    const response = await fetch(\"/users/updateUser\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": csrfToken\n      },\n      body: JSON.stringify(data)\n    });\n    const json = await response.json();\n    return [json, response];\n  }\n\n  static async updateUserAccount(data) {\n    const csrfToken = getCookie(\"csrftoken\");\n    const response = await fetch(\"/users/updateUserAccount\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": csrfToken\n      },\n      body: JSON.stringify(data)\n    });\n    const json = await response.json();\n    return [json, response];\n  }\n\n}\n\nclass APICitas {\n  static async createCita(data) {\n    const csrfToken = getCookie(\"csrftoken\");\n    const response = await fetch(\"/citas/createCita\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": csrfToken\n      },\n      body: JSON.stringify(data)\n    });\n    const json = await response.json();\n    return [json, response];\n  }\n\n  static async createCitaAdmin(data) {\n    const csrfToken = getCookie(\"csrftoken\");\n    const response = await fetch(\"/citas/createCitaAdmin\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": csrfToken\n      },\n      body: JSON.stringify(data)\n    });\n    const json = await response.json();\n    return [json, response];\n  }\n\n  static async getDates() {\n    const response = await fetch(\"/citas/getDates\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const json = await response.json();\n    return json;\n  }\n\n  static async updateCita(data) {\n    const csrfToken = getCookie(\"csrftoken\");\n    const response = await fetch(\"/citas/updateCita\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": csrfToken\n      },\n      body: JSON.stringify(data)\n    });\n    const json = await response.json();\n    return [json, response];\n  }\n\n  static async deleteCita({\n    appointment\n  }) {\n    const csrfToken = getCookie(\"csrftoken\");\n    const response = await fetch(`/citas/deleteAppointment/${appointment.appointment_id}/`, {\n      method: \"DELETE\",\n      headers: {\n        \"X-CSRFToken\": csrfToken\n      }\n    });\n    console.log(response);\n    const json = await response.json();\n    return [json, response];\n  }\n\n  static async deleteCitaNotification({\n    cita\n  }) {\n    const csrfToken = getCookie(\"csrftoken\");\n    const response = await fetch(\"/citas/deleteAppointmentNotification\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": csrfToken\n      },\n      body: JSON.stringify(cita)\n    });\n    const json = await response.json();\n    return [json, response];\n  }\n\n  static async ApproveCita(data) {\n    const csrfToken = getCookie(\"csrftoken\");\n    const response = await fetch(\"/citas/approveCita\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": csrfToken\n      },\n      body: JSON.stringify(data)\n    });\n    const json = await response.json();\n    return [json, response];\n  }\n\n}\n\nclass APIProducts {\n  static async createProduct(data) {\n    const csrfToken = getCookie(\"csrftoken\");\n    const response = await fetch(\"/products/createProduct\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": csrfToken\n      },\n      body: JSON.stringify(data)\n    });\n    const json = await response.json();\n    return [json, response];\n  }\n\n  static async updateProduct(data) {\n    const csrfToken = getCookie(\"csrftoken\");\n    const response = await fetch(\"/products/updateProduct\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": csrfToken\n      },\n      body: JSON.stringify(data)\n    });\n    const json = await response.json();\n    return [json, response];\n  }\n\n  static async deleteProduct({\n    product\n  }) {\n    const csrfToken = getCookie(\"csrftoken\");\n    const response = await fetch(`/products/deleteProduct/${product.product_id}/`, {\n      method: \"DELETE\",\n      headers: {\n        \"X-CSRFToken\": csrfToken\n      }\n    });\n    const json = await response.json();\n    return [json, response];\n  }\n\n}\n\nclass APIAnimals {\n  static async createAnimal(data) {\n    const csrfToken = getCookie(\"csrftoken\");\n    const response = await fetch(\"/animals/createAnimal\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": csrfToken\n      },\n      body: JSON.stringify(data)\n    });\n    const json = await response.json();\n    return [json, response];\n  }\n\n}\n\nclass APIPedidos {\n  static async createPedido(data) {\n    const csrfToken = getCookie(\"csrftoken\");\n    const response = await fetch(\"/pedidos/createPedido\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": csrfToken\n      },\n      body: JSON.stringify(data)\n    });\n    const json = await response.json();\n    return [json, response];\n  }\n\n  static async updatePedido(data) {\n    const csrfToken = getCookie(\"csrftoken\");\n    const response = await fetch(\"/pedidos/updatePedido\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": csrfToken\n      },\n      body: JSON.stringify(data)\n    });\n    const json = await response.json();\n    return [json, response];\n  }\n\n}\n\nconst IMG_URL = \"http://localhost:5000/static/img/products/\";\nconst IMG_HOME_URL = \"http://localhost:5000/static/img/homeProducts/\";\nexport { APIUsers, APICitas, APIProducts, APIAnimals, APIPedidos, IMG_URL, IMG_HOME_URL };","map":{"version":3,"sources":["C:/Users/ederivc/Documents/NEWHEROKU/frontend/src/api/api.jsx"],"names":["getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","APIUsers","login","data","csrfToken","response","fetch","method","headers","body","JSON","stringify","createUser","json","deleteUser","user","user_id","updateUser","updateUserAccount","APICitas","createCita","createCitaAdmin","getDates","updateCita","deleteCita","appointment","appointment_id","console","log","deleteCitaNotification","cita","ApproveCita","APIProducts","createProduct","updateProduct","deleteProduct","product","product_id","APIAnimals","createAnimal","APIPedidos","createPedido","updatePedido","IMG_URL","IMG_HOME_URL"],"mappings":"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","sourcesContent":["function getCookie(name) {\r\n  let cookieValue = \"\";\r\n  if (document.cookie && document.cookie !== \"\") {\r\n    const cookies = document.cookie.split(\";\");\r\n    for (let i = 0; i < cookies.length; i++) {\r\n      const cookie = cookies[i].trim();\r\n      if (cookie.substring(0, name.length + 1) === name + \"=\") {\r\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\nclass APIUsers {\r\n  static async login(data) {\r\n    const csrfToken = getCookie(\"csrftoken\");\r\n    const response = await fetch(\"/auth/login\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"X-CSRFToken\": csrfToken,\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n    return response;\r\n  }\r\n\r\n  static async createUser(data) {\r\n    const csrfToken = getCookie(\"csrftoken\");\r\n    const response = await fetch(\"/users/createUser\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"X-CSRFToken\": csrfToken,\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n    const json = await response.json();\r\n    return [json, response];\r\n  }\r\n\r\n  static async deleteUser({ user }) {\r\n    const csrfToken = getCookie(\"csrftoken\");\r\n    const response = await fetch(`/users/deleteUser/${user.user_id}/`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"X-CSRFToken\": csrfToken,\r\n      },\r\n    });\r\n    const json = await response.json();\r\n    return [json, response];\r\n  }\r\n\r\n  static async updateUser(data) {\r\n    const csrfToken = getCookie(\"csrftoken\");\r\n    const response = await fetch(\"/users/updateUser\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"X-CSRFToken\": csrfToken,\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n    const json = await response.json();\r\n    return [json, response];\r\n  }\r\n\r\n  static async updateUserAccount(data) {\r\n    const csrfToken = getCookie(\"csrftoken\");\r\n    const response = await fetch(\"/users/updateUserAccount\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"X-CSRFToken\": csrfToken,\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n    const json = await response.json();\r\n    return [json, response];\r\n  }\r\n}\r\n\r\nclass APICitas {\r\n  static async createCita(data) {\r\n    const csrfToken = getCookie(\"csrftoken\");\r\n    const response = await fetch(\"/citas/createCita\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"X-CSRFToken\": csrfToken,\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n    const json = await response.json();\r\n    return [json, response];\r\n  }\r\n\r\n  static async createCitaAdmin(data) {\r\n    const csrfToken = getCookie(\"csrftoken\");\r\n    const response = await fetch(\"/citas/createCitaAdmin\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"X-CSRFToken\": csrfToken,\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n    const json = await response.json();\r\n    return [json, response];\r\n  }\r\n\r\n  static async getDates() {\r\n    const response = await fetch(\"/citas/getDates\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    const json = await response.json();\r\n    return json;\r\n  }\r\n\r\n  static async updateCita(data) {\r\n    const csrfToken = getCookie(\"csrftoken\");\r\n    const response = await fetch(\"/citas/updateCita\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"X-CSRFToken\": csrfToken,\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n    const json = await response.json();\r\n    return [json, response];\r\n  }\r\n\r\n  static async deleteCita({ appointment }) {\r\n    const csrfToken = getCookie(\"csrftoken\");\r\n    const response = await fetch(\r\n      `/citas/deleteAppointment/${appointment.appointment_id}/`,\r\n      {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"X-CSRFToken\": csrfToken,\r\n        },\r\n      }\r\n    );\r\n    console.log(response);\r\n    const json = await response.json();\r\n    return [json, response];\r\n  }\r\n\r\n  static async deleteCitaNotification({ cita }) {\r\n    const csrfToken = getCookie(\"csrftoken\");\r\n    const response = await fetch(\"/citas/deleteAppointmentNotification\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"X-CSRFToken\": csrfToken,\r\n      },\r\n      body: JSON.stringify(cita),\r\n    });\r\n    const json = await response.json();\r\n    return [json, response];\r\n  }\r\n\r\n  static async ApproveCita(data) {\r\n    const csrfToken = getCookie(\"csrftoken\");\r\n    const response = await fetch(\"/citas/approveCita\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"X-CSRFToken\": csrfToken,\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n    const json = await response.json();\r\n    return [json, response];\r\n  }\r\n}\r\n\r\nclass APIProducts {\r\n  static async createProduct(data) {\r\n    const csrfToken = getCookie(\"csrftoken\");\r\n    const response = await fetch(\"/products/createProduct\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"X-CSRFToken\": csrfToken,\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n    const json = await response.json();\r\n    return [json, response];\r\n  }\r\n\r\n  static async updateProduct(data) {\r\n    const csrfToken = getCookie(\"csrftoken\");\r\n    const response = await fetch(\"/products/updateProduct\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"X-CSRFToken\": csrfToken,\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n    const json = await response.json();\r\n    return [json, response];\r\n  }\r\n\r\n  static async deleteProduct({ product }) {\r\n    const csrfToken = getCookie(\"csrftoken\");\r\n    const response = await fetch(\r\n      `/products/deleteProduct/${product.product_id}/`,\r\n      {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"X-CSRFToken\": csrfToken,\r\n        },\r\n      }\r\n    );\r\n    const json = await response.json();\r\n    return [json, response];\r\n  }\r\n}\r\n\r\nclass APIAnimals {\r\n  static async createAnimal(data) {\r\n    const csrfToken = getCookie(\"csrftoken\");\r\n    const response = await fetch(\"/animals/createAnimal\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"X-CSRFToken\": csrfToken,\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n    const json = await response.json();\r\n    return [json, response];\r\n  }\r\n}\r\n\r\nclass APIPedidos {\r\n  static async createPedido(data) {\r\n    const csrfToken = getCookie(\"csrftoken\");\r\n    const response = await fetch(\"/pedidos/createPedido\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"X-CSRFToken\": csrfToken,\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n    const json = await response.json();\r\n    return [json, response];\r\n  }\r\n\r\n  static async updatePedido(data) {\r\n    const csrfToken = getCookie(\"csrftoken\");\r\n    const response = await fetch(\"/pedidos/updatePedido\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"X-CSRFToken\": csrfToken,\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n    const json = await response.json();\r\n    return [json, response];\r\n  }\r\n}\r\n\r\nconst IMG_URL = \"http://localhost:5000/static/img/products/\";\r\nconst IMG_HOME_URL = \"http://localhost:5000/static/img/homeProducts/\";\r\n\r\nexport {\r\n  APIUsers,\r\n  APICitas,\r\n  APIProducts,\r\n  APIAnimals,\r\n  APIPedidos,\r\n  IMG_URL,\r\n  IMG_HOME_URL,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}